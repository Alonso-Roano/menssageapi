version: '3.9'

services:
  landing:
    build:
      context: ./landing-project
      args:
        - PUBLIC_API_URL=${PUBLIC_API_URL_CLEAN}
        - PUBLIC_API_URL_CLEAN=${PUBLIC_API_URL_CLEAN}
    ports:
      - "${PORT_LANDING}:${PORT_LANDING}"
    environment:
      - NODE_ENV=production
      - PUBLIC_CAPTCHA_TOKEN=${PUBLIC_CAPTCHA_TOKEN}
      - PUBLIC_API_KEY=${PUBLIC_API_KEY}
      - SECRET_API_KEY=${SECRET_API_KEY}
      - PUBLIC_DISCORD=${PUBLIC_DISCORD}
    networks:
      - app-network
    depends_on:
      - api

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./api/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  api:
    build:
      context: ./api
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - SECRET_API_KEY=${SECRET_API_KEY}
      - PUBLIC_API_KEY=${PUBLIC_API_KEY}
      - PUBLIC_DISCORD=${PUBLIC_DISCORD}
    ports:
      - "${PORT_API}:3000"
    volumes:
      - ./api:/usr/src/app
      - /api/usr/src/app/node_modules
    working_dir: /usr/src/app
    command: npm run dev

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
